# Resolver react_native_pods.rb con node para permitir el hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported


# Preparar el proyecto React Native
prepare_react_native_project!

# Configuración de frameworks si se requiere
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# El target principal de la app
target 'rnapp' do
  # Configuración de los módulos nativos de React Native
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # Ruta absoluta a la raíz de la aplicación
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # React Native Maps dependencies
  rn_maps_path = '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => rn_maps_path


  # Habilitar los permisos necesarios para la aplicación
  require File.join(__dir__, '../node_modules/react-native-permissions/scripts/setup.rb')

  setup_permissions([
    'LocationAccuracy',
    'LocationAlways',
    'LocationWhenInUse',
  ])

  # El target de pruebas de tu app
  target 'rnappTests' do
    inherit! :complete
    # Pods para pruebas
  end

  # Post instalación para configurar React Native
  post_install do |installer|
    # Script para post instalación de React Native
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
  end
end
